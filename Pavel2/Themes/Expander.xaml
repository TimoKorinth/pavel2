<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" >

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Shared.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- SimpleStyles: Expander -->

  <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
    <Border
      x:Name="Border" 
      CornerRadius="2,0,0,0"
      Background="Transparent"
      BorderBrush="{StaticResource NormalBorderBrush}"
      BorderThickness="0,0,1,0">
      <Path 
        x:Name="Arrow"
        Fill="{StaticResource GlyphBrush}"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Data="M 0 4 L 4 0 L 8 4 Z"/>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="true">
        <Setter TargetName="Border" Property="Background"
                Value="{StaticResource DarkBrush}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="true">
        <Setter TargetName="Border" Property="Background"
                Value="{StaticResource PressedBrush}" />
      </Trigger>
      <Trigger Property="IsChecked" Value="true">
        <Setter TargetName="Arrow" Property="Data"
                Value="M 0 0 L 4 4 L 8 0 Z" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="Border" Property="Background"
                Value="{StaticResource DisabledBackgroundBrush}" />
        <Setter TargetName="Border" Property="BorderBrush"
                Value="{StaticResource DisabledBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource DisabledForegroundBrush}"/>
        <Setter TargetName="Arrow" Property="Fill"
                Value="{StaticResource DisabledForegroundBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

    <ControlTemplate x:Key="ExpanderCloseButton" TargetType="{x:Type ToggleButton}">
        <Border
      x:Name="Border" 
      CornerRadius="2,0,0,0"
      Background="Transparent"
      BorderBrush="{StaticResource NormalBorderBrush}"
      BorderThickness="1,0,0,0">
            <Path 
        x:Name="Arrow"
        Fill="{StaticResource GlyphBrush}"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Data="M1,0L5,5 4,6 0,1z M1,6L5,1 4,0 0,5z"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background"
                Value="{StaticResource DarkBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background"
                Value="{StaticResource PressedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background"
                Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush"
                Value="{StaticResource DisabledBorderBrush}" />
                <Setter Property="Foreground"
                Value="{StaticResource DisabledForegroundBrush}"/>
                <Setter TargetName="Arrow" Property="Fill"
                Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="ExpanderLeftButton" TargetType="{x:Type ToggleButton}">
        <Border
      x:Name="Border" 
      CornerRadius="2,0,0,0"
      Background="Transparent"
      BorderBrush="{StaticResource NormalBorderBrush}"
      BorderThickness="1,0,0,0">
            <Path 
        x:Name="Arrow"
        Fill="{StaticResource GlyphBrush}"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Data="M 0 8 L 4 4 L 0 0 Z"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background"
                Value="{StaticResource DarkBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background"
                Value="{StaticResource PressedBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Arrow" Property="Data"
                Value="M 4 8 L 0 4 L 4 0 Z" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background"
                Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush"
                Value="{StaticResource DisabledBorderBrush}" />
                <Setter Property="Foreground"
                Value="{StaticResource DisabledForegroundBrush}"/>
                <Setter TargetName="Arrow" Property="Fill"
                Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="ExpanderRightButton" TargetType="{x:Type ToggleButton}">
        <Border
      x:Name="Border" 
      CornerRadius="2,0,0,0"
      Background="Transparent"
      BorderBrush="{StaticResource NormalBorderBrush}"
      BorderThickness="0,0,1,0">
            <Path 
        x:Name="Arrow"
        Fill="{StaticResource GlyphBrush}"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Data="M 4 8 L 0 4 L 4 0 Z"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background"
                Value="{StaticResource DarkBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background"
                Value="{StaticResource PressedBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Arrow" Property="Data"
                Value="M 0 8 L 4 4 L 0 0 Z" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background"
                Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush"
                Value="{StaticResource DisabledBorderBrush}" />
                <Setter Property="Foreground"
                Value="{StaticResource DisabledForegroundBrush}"/>
                <Setter TargetName="Arrow" Property="Fill"
                Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Expander}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
      	<DockPanel LastChildFill="True">
      		<Border 
      			x:Name="Border" 
      			Background="{StaticResource LightBrush}"
      			BorderBrush="{StaticResource NormalBorderBrush}"
      			BorderThickness="{TemplateBinding BorderThickness}" 
      			CornerRadius="2,2,0,0" DockPanel.Dock="Top" >
      			<DockPanel>
      				<ToggleButton
      					IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
      					OverridesDefaultStyle="True" 
      					Template="{StaticResource ExpanderToggleButton}" 
      					Background="{StaticResource NormalBrush}" DockPanel.Dock="Left" Width="20" />
      				<ContentPresenter
      					Margin="4" 
      					ContentSource="Header" 
      					RecognizesAccessKey="True" DockPanel.Dock="Right" />
      			</DockPanel>
      		</Border>
      		<Border 
      			x:Name="Content" 
      			Background="{StaticResource WindowBackgroundBrush}"
      			BorderBrush="{StaticResource SolidBorderBrush}" 
      			BorderThickness="{TemplateBinding BorderThickness}" 
                Visibility="Collapsed"
      			CornerRadius="0,0,2,2" DockPanel.Dock="Bottom" >
      			<ContentPresenter Margin="{TemplateBinding Padding}" />
      		</Border>
      	</DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
              <Setter TargetName="Content" Property="Visibility"
                      Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Background"
                      Value="{StaticResource DisabledBackgroundBrush}" />
              <Setter TargetName="Border" Property="BorderBrush"
                      Value="{StaticResource DisabledBorderBrush}" />
              <Setter Property="Foreground"
                      Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

    <Style x:Key="LeftExpander" TargetType="{x:Type Expander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <DockPanel LastChildFill="True">
                        <Border 
  			            x:Name="Border" 
  			            Background="{StaticResource LightBrush}"
  			            BorderBrush="{StaticResource NormalBorderBrush}"
  			            BorderThickness="{TemplateBinding BorderThickness}" 
  			            CornerRadius="2,2,0,0" DockPanel.Dock="Top" >
                            <DockPanel>
                                <ToggleButton
      					        IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
      					        OverridesDefaultStyle="True" 
      					        Template="{StaticResource ExpanderLeftButton}" 
      					        Background="{StaticResource NormalBrush}" DockPanel.Dock="Right" Width="20" Height="20" />
                                <ContentPresenter
      					        Margin="4" x:Name="Header"
      					        ContentSource="Header" Visibility="Collapsed"
      					        RecognizesAccessKey="True" DockPanel.Dock="Left" />
                            </DockPanel>
                        </Border>
                        <Border
      			        Background="{StaticResource WindowBackgroundBrush}"
      			        BorderBrush="{StaticResource SolidBorderBrush}" 
      			        BorderThickness="{TemplateBinding BorderThickness}"
      			        CornerRadius="0,0,2,2" DockPanel.Dock="Bottom" >
                            <Grid>
                                <ContentPresenter Visibility="Collapsed"
                                                  Margin="{TemplateBinding Padding}" x:Name="Content" />
                                <Label x:Name="HeaderLeft" HorizontalContentAlignment="Right"
                                       Background="{StaticResource LightBrush}"
  			                           BorderBrush="{StaticResource NormalBorderBrush}"
  			                           BorderThickness="{TemplateBinding BorderThickness}"
                                       Content="{Binding ElementName=Header, Path=Content}">
                                    <Label.LayoutTransform>
                                        <RotateTransform Angle="-90" />
                                    </Label.LayoutTransform>
                                </Label>
                            </Grid>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="HeaderLeft" Property="Visibility"
                            Value="Collapsed" />
                            <Setter TargetName="Content" Property="Visibility"
                            Value="Visible" />
                            <Setter TargetName="Header" Property="Visibility"
                            Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background"
                      Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                      Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground"
                      Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="RightExpander" TargetType="{x:Type Expander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <DockPanel LastChildFill="True">
                        <Border 
  			            x:Name="Border" 
  			            Background="{StaticResource LightBrush}"
  			            BorderBrush="{StaticResource NormalBorderBrush}"
  			            BorderThickness="{TemplateBinding BorderThickness}" 
  			            CornerRadius="2,2,0,0" DockPanel.Dock="Top" >
                            <DockPanel>
                                <ToggleButton
      					        IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
      					        OverridesDefaultStyle="True" 
      					        Template="{StaticResource ExpanderRightButton}" 
      					        Background="{StaticResource NormalBrush}" DockPanel.Dock="Left" Width="20" Height="20" />
                                <ContentPresenter
      					        Margin="4" x:Name="Header"
      					        ContentSource="Header" Visibility="Collapsed"
      					        RecognizesAccessKey="True" DockPanel.Dock="Right" />
                            </DockPanel>
                        </Border>
                        <Border
      			        Background="{StaticResource WindowBackgroundBrush}"
      			        BorderBrush="{StaticResource SolidBorderBrush}" 
      			        BorderThickness="{TemplateBinding BorderThickness}"
      			        CornerRadius="0,0,2,2" DockPanel.Dock="Bottom" >
                            <Grid>
                                <ContentPresenter Visibility="Collapsed"
                                                  Margin="{TemplateBinding Padding}" x:Name="Content" />
                                <Label x:Name="HeaderLeft" HorizontalContentAlignment="Right"
                                       Background="{StaticResource LightBrush}"
  			                           BorderBrush="{StaticResource NormalBorderBrush}"
  			                           BorderThickness="{TemplateBinding BorderThickness}"
                                       Content="{Binding ElementName=Header, Path=Content}">
                                    <Label.LayoutTransform>
                                        <RotateTransform Angle="-90" />
                                    </Label.LayoutTransform>
                                </Label>
                            </Grid>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="HeaderLeft" Property="Visibility"
                            Value="Collapsed" />
                            <Setter TargetName="Content" Property="Visibility"
                            Value="Visible" />
                            <Setter TargetName="Header" Property="Visibility"
                            Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background"
                      Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                      Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground"
                      Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderCloseStyle" TargetType="{x:Type Expander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <DockPanel LastChildFill="True">
                        <Border 
      			x:Name="Border" 
      			Background="{StaticResource LightBrush}"
      			BorderBrush="{StaticResource NormalBorderBrush}"
      			BorderThickness="{TemplateBinding BorderThickness}" 
      			CornerRadius="2,2,0,0" DockPanel.Dock="Top" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton
      					IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
      					OverridesDefaultStyle="True" 
      					Template="{StaticResource ExpanderCloseButton}" 
      					Background="{StaticResource NormalBrush}" Grid.Column="1" />
                                <ContentPresenter 
      					Grid.Column="0"
      					Margin="4" 
      					ContentSource="Header" 
      					RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                        <Border 
      			x:Name="Content" 
      			Background="{StaticResource WindowBackgroundBrush}"
      			BorderBrush="{StaticResource SolidBorderBrush}" 
      			BorderThickness="{TemplateBinding BorderThickness}" 
                Visibility="Collapsed"
      			CornerRadius="0,0,2,2" DockPanel.Dock="Bottom" >
                            <ContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="Content" Property="Visibility"
                      Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background"
                      Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                      Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground"
                      Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>